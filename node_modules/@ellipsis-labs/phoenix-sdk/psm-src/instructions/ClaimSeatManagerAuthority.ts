/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from "@metaplex-foundation/beet";
import * as web3 from "@solana/web3.js";

/**
 * @category Instructions
 * @category ClaimSeatManagerAuthority
 * @category generated
 */
export const ClaimSeatManagerAuthorityStruct = new beet.BeetArgsStruct<{
  instructionDiscriminator: number;
}>(
  [["instructionDiscriminator", beet.u8]],
  "ClaimSeatManagerAuthorityInstructionArgs"
);
/**
 * Accounts required by the _ClaimSeatManagerAuthority_ instruction
 *
 * @property [_writable_] seatManager This account holds the seat manager state
 * @property [**signer**] successor The successor account must sign to claim authority
 * @category Instructions
 * @category ClaimSeatManagerAuthority
 * @category generated
 */
export type ClaimSeatManagerAuthorityInstructionAccounts = {
  seatManager: web3.PublicKey;
  successor: web3.PublicKey;
};

export const claimSeatManagerAuthorityInstructionDiscriminator = 7;

/**
 * Creates a _ClaimSeatManagerAuthority_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @category Instructions
 * @category ClaimSeatManagerAuthority
 * @category generated
 */
export function createClaimSeatManagerAuthorityInstruction(
  accounts: ClaimSeatManagerAuthorityInstructionAccounts,
  programId = new web3.PublicKey("PSMxQbAoDWDbvd9ezQJgARyq6R9L5kJAasaLDVcZwf1")
) {
  const [data] = ClaimSeatManagerAuthorityStruct.serialize({
    instructionDiscriminator: claimSeatManagerAuthorityInstructionDiscriminator,
  });
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.seatManager,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: accounts.successor,
      isWritable: false,
      isSigner: true,
    },
  ];

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  });
  return ix;
}
